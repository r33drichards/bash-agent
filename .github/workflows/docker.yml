name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: wholelottahoopla/agent

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Nix
        uses: DeterminateSystems/nix-installer-action@main

      # Add Nix store cache restore step
      - name: Restore Nix store cache
        uses: actions/cache@v4
        with:
          path: /nix/store
          key: nix-store-${{ runner.os }}-${{ hashFiles('flake.nix', 'flake.lock') }}
          restore-keys: |
            nix-store-${{ runner.os }}-

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: wholelottahoopla
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Load and push Docker image
        run: |
          nix build .#streamLayered
          ./result | docker load
          docker tag bash-agent:latest ${{ env.IMAGE_NAME }}:`git rev-parse HEAD`
          docker push ${{ env.IMAGE_NAME }}:`git rev-parse HEAD`
          docker tag bash-agent:latest ${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.IMAGE_NAME }}:latest

      # Save Nix store cache after build
      - name: Save Nix store cache
        if: always()
        uses: actions/cache@v4
        with:
          path: /nix/store
          key: nix-store-${{ runner.os }}-${{ hashFiles('flake.nix', 'flake.lock') }}
          restore-keys: |
            nix-store-${{ runner.os }}-

